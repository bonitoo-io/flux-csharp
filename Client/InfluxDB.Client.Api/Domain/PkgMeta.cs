/* 
 * Influx API Service
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 0.1.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using OpenAPIDateConverter = InfluxDB.Client.Api.Client.OpenAPIDateConverter;

namespace InfluxDB.Client.Api.Domain
{
    /// <summary>
    /// PkgMeta
    /// </summary>
    [DataContract]
    public partial class PkgMeta :  IEquatable<PkgMeta>
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="PkgMeta" /> class.
        /// </summary>
        /// <param name="description">description.</param>
        /// <param name="pkgName">pkgName.</param>
        /// <param name="pkgVersion">pkgVersion.</param>
        public PkgMeta(string description = default(string), string pkgName = default(string), string pkgVersion = default(string))
        {
            this.Description = description;
            this.PkgName = pkgName;
            this.PkgVersion = pkgVersion;
        }

        /// <summary>
        /// Gets or Sets Description
        /// </summary>
        [DataMember(Name="description", EmitDefaultValue=false)]
        public string Description { get; set; }

        /// <summary>
        /// Gets or Sets PkgName
        /// </summary>
        [DataMember(Name="pkgName", EmitDefaultValue=false)]
        public string PkgName { get; set; }

        /// <summary>
        /// Gets or Sets PkgVersion
        /// </summary>
        [DataMember(Name="pkgVersion", EmitDefaultValue=false)]
        public string PkgVersion { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class PkgMeta {\n");
            sb.Append("  Description: ").Append(Description).Append("\n");
            sb.Append("  PkgName: ").Append(PkgName).Append("\n");
            sb.Append("  PkgVersion: ").Append(PkgVersion).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as PkgMeta);
        }

        /// <summary>
        /// Returns true if PkgMeta instances are equal
        /// </summary>
        /// <param name="input">Instance of PkgMeta to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(PkgMeta input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Description == input.Description ||
                    (this.Description != null &&
                    this.Description.Equals(input.Description))
                ) && 
                (
                    this.PkgName == input.PkgName ||
                    (this.PkgName != null &&
                    this.PkgName.Equals(input.PkgName))
                ) && 
                (
                    this.PkgVersion == input.PkgVersion ||
                    (this.PkgVersion != null &&
                    this.PkgVersion.Equals(input.PkgVersion))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Description != null)
                    hashCode = hashCode * 59 + this.Description.GetHashCode();
                if (this.PkgName != null)
                    hashCode = hashCode * 59 + this.PkgName.GetHashCode();
                if (this.PkgVersion != null)
                    hashCode = hashCode * 59 + this.PkgVersion.GetHashCode();
                return hashCode;
            }
        }

    }

}
